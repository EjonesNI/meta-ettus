From c38ff8de4317d65439085ed876a6fd3e8df234cb Mon Sep 17 00:00:00 2001
From: Moritz Fischer <moritz.fischer@ettus.com>
Date: Tue, 27 Feb 2018 14:12:30 -0800
Subject: [PATCH 4/7] ni: zynq: Add support for Project Phosphorus

Signed-off-by: Moritz Fischer <moritz.fischer@ettus.com>
---
 board/ni/zynq/Makefile                        |  2 +-
 board/ni/zynq/board.c                         | 71 ++++++++++---------
 .../zynq/{sulfur-eeprom.c => n3xx-eeprom.c}   | 70 +++++++++++++-----
 .../zynq/{sulfur-eeprom.h => n3xx-eeprom.h}   | 22 +++---
 4 files changed, 100 insertions(+), 65 deletions(-)
 rename board/ni/zynq/{sulfur-eeprom.c => n3xx-eeprom.c} (65%)
 rename board/ni/zynq/{sulfur-eeprom.h => n3xx-eeprom.h} (73%)

diff --git a/board/ni/zynq/Makefile b/board/ni/zynq/Makefile
index b8a55978cd..191bbd35c3 100644
--- a/board/ni/zynq/Makefile
+++ b/board/ni/zynq/Makefile
@@ -2,7 +2,7 @@
 # SPDX-License-Identifier:	GPL-2.0+
 #
 
-obj-y	:= board.o sulfur-eeprom.o
+obj-y	:= board.o n3xx-eeprom.o
 
 # Remove quotes
 hw-platform-y :=$(shell echo $(CONFIG_DEFAULT_DEVICE_TREE))
diff --git a/board/ni/zynq/board.c b/board/ni/zynq/board.c
index 6f340a9526..4c1f793db9 100644
--- a/board/ni/zynq/board.c
+++ b/board/ni/zynq/board.c
@@ -14,7 +14,7 @@
 #include <asm/arch/hardware.h>
 #include <asm/arch/sys_proto.h>
 
-#include "sulfur-eeprom.h"
+#include "n3xx-eeprom.h"
 #include <i2c.h>
 
 DECLARE_GLOBAL_DATA_PTR;
@@ -158,7 +158,6 @@ int board_late_init(void)
 {
 	int slot0, slot1, slot0_rev, slot1_rev;
 	char dboard[128];
-	char base_fdt[128];
 	int rev;
 
 	switch ((zynq_slcr_get_boot_mode()) & ZYNQ_BM_MASK) {
@@ -186,41 +185,43 @@ int board_late_init(void)
 	board_power(BOARD_POWER_TYPE_ON);
 #endif
 
-	rev = sulfur_probe_mboard();
-	if (rev > 0) {
-		snprintf(base_fdt, 128, "sulfur-rev%u", rev+1);
-		env_set("mboard", base_fdt);
-	} else {
-		snprintf(base_fdt, 128, "sulfur-rev3");
-		env_set("mboard", base_fdt);
-	}
+	/* zero is a legit mboard revision */
+	rev = n3xx_probe_mboard();
+	if (rev >= 0) {
+		slot0 = n3xx_probe_dboard(0, &slot0_rev);
+		slot1 = n3xx_probe_dboard(1, &slot1_rev);
+
+		if (!legit_combo(slot0, slot1, 0x150)) {
+			snprintf(dboard, 128, "%s-magnesium-rev%u",
+				 env_get("mboard"),
+				 max(slot0_rev, slot1_rev));
+			env_set("variant", dboard);
+		} else if (!legit_combo(slot0, slot1, 0x152)) {
+			snprintf(dboard, 128, "%s-rhodium-rev%u",
+				 env_get("mboard"),
+				 max(slot0_rev, slot1_rev));
+			env_set("variant", dboard);
+		} else if (!legit_combo(slot0, slot1, 0x180)) {
+			snprintf(dboard, 128, "%s-eiscat-rev%u",
+				 env_get("mboard"),
+				 max(slot0_rev, slot1_rev));
+			env_set("variant", dboard);
+		} else {
+			env_set("variant", env_get("mboard"));
+			printf("No known dboard found, falling back to %s\n", env_get("mboard"));
+			if (slot0 > 0 && slot1 > 0)
+				printf("If Slot0: %x / Slot1: %x is a legit combo, try updating your u-boot\n",
+				slot0, slot1);
+		}
 
-	slot0 = sulfur_probe_dboard(0, &slot0_rev);
-	slot1 = sulfur_probe_dboard(1, &slot1_rev);
-
-	if (!legit_combo(slot0, slot1, 0x150)) {
-		snprintf(dboard, 128, "%s-magnesium-rev%u",
-			 base_fdt,
-			 max(slot0_rev, slot1_rev));
-		env_set("variant", dboard);
-	} else if (!legit_combo(slot0, slot1, 0x152)) {
-		snprintf(dboard, 128, "%s-rhodium-rev%u",
-			 base_fdt,
-			 max(slot0_rev, slot1_rev));
-		env_set("variant", dboard);
-	} else if (!legit_combo(slot0, slot1, 0x180)) {
-		snprintf(dboard, 128, "%s-eiscat-rev%u",
-			 base_fdt,
-			 max(slot0_rev, slot1_rev));
-		env_set("variant", dboard);
-	} else {
-		env_set("variant", env_get("mboard"));
-		printf("No known dboard found, falling back to %s\n", env_get("mboard"));
-		if (slot0 > 0 && slot1 > 0)
-			printf("If Slot0: %x / Slot1: %x is a legit combo, try updating your u-boot\n",
-			slot0, slot1);
+		return 0;
 	}
 
+	/* probe for n3xx, if that doesn't work out,
+	 * fall back to sulfur-rev3, as somewhat safe option
+	 */
+	env_set("mboard", "sulfur-rev3");
+
 	return 0;
 }
 
@@ -234,7 +235,7 @@ int zynq_board_read_rom_ethaddr(unsigned char *ethaddr)
 		printf("I2C EEPROM MAC address read failed\n");
 #endif
 
-	sulfur_read_ethaddr(ethaddr, 0);
+	n3xx_read_ethaddr(ethaddr, 0);
 
 	return 0;
 }
diff --git a/board/ni/zynq/sulfur-eeprom.c b/board/ni/zynq/n3xx-eeprom.c
similarity index 65%
rename from board/ni/zynq/sulfur-eeprom.c
rename to board/ni/zynq/n3xx-eeprom.c
index a5ae89f8c7..dd75b841b5 100644
--- a/board/ni/zynq/sulfur-eeprom.c
+++ b/board/ni/zynq/n3xx-eeprom.c
@@ -5,30 +5,32 @@
  */
 
 #include <common.h>
-#include "sulfur-eeprom.h"
+#include "n3xx-eeprom.h"
 #include <dm.h>
 #include <i2c.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
-struct sulfur_xboard_match {
+struct n3xx_xboard_match {
 	u16 pid;
 	const char *name;
+	const char *dtb;
 };
 
-static const struct sulfur_xboard_match db_match[] = {
-	{ .pid = 0x150, .name = "Magnesium XCVR" },
-	{ .pid = 0x152, .name = "Rhodium XCVR" },
-	{ .pid = 0x180, .name = "EISCAT RX" },
+static const struct n3xx_xboard_match db_match[] = {
+	{ .pid = 0x150, .name = "Magnesium XCVR", .dtb = "magnesium" },
+	{ .pid = 0x152, .name = "Rhodium XCVR", .dtb = "rhodium" },
+	{ .pid = 0x180, .name = "EISCAT RX", .dtb = "eiscat" },
 	{},
 };
 
-static const struct sulfur_xboard_match mb_match[] = {
-	{ .pid = 0x4242, .name = "Sulfur" },
+static const struct n3xx_xboard_match mb_match[] = {
+	{ .pid = 0x4242, .name = "Sulfur", .dtb = "sulfur" },
+	{ .pid = 0x4240, .name = "Phosphorus", .dtb = "phosphorus" },
 	{},
 };
 
-const char *sulfur_get_mboard_name(u16 pid)
+static const char *n3xx_get_mboard_name(u16 pid)
 {
 	int i;
 
@@ -39,7 +41,18 @@ const char *sulfur_get_mboard_name(u16 pid)
 	return "Unknown";
 }
 
-const char *sulfur_get_dboard_name(u16 pid)
+static const char *n3xx_get_mboard_dtb(u16 pid)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(mb_match); i++)
+		if (pid == mb_match[i].pid)
+			return mb_match[i].dtb;
+
+	return "unsupported";
+}
+
+static const char *n3xx_get_dboard_name(u16 pid)
 {
 	int i;
 
@@ -50,10 +63,22 @@ const char *sulfur_get_dboard_name(u16 pid)
 	return "Unknown";
 }
 
-int sulfur_probe_dboard(int dboard, int *rev)
+static int n3xx_match(u16 pid)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(mb_match); i++) {
+		if (pid == mb_match[i].pid)
+			return 0;
+	}
+
+	return -ENOTSUPP;
+}
+
+int n3xx_probe_dboard(int dboard, int *rev)
 {
 	struct udevice *usrpio, *eeprom_chip;
-	struct sulfur_dboard_eeprom eeprom;
+	struct n3xx_dboard_eeprom eeprom;
 	int err, i;
 	u32 crc;
 
@@ -84,7 +109,7 @@ int sulfur_probe_dboard(int dboard, int *rev)
 	}
 
 	printf("Slot %u: %s Rev %c s/n: %s\n", dboard,
-	       sulfur_get_dboard_name(htons(eeprom.pid)),
+	       n3xx_get_dboard_name(htons(eeprom.pid)),
 	       'A' + htons(eeprom.rev),
 	       eeprom.serial);
 
@@ -93,10 +118,11 @@ int sulfur_probe_dboard(int dboard, int *rev)
 	return htons(eeprom.pid);
 }
 
-int sulfur_probe_mboard(void)
+int n3xx_probe_mboard(void)
 {
 	struct udevice *i2c_tun, *eeprom_chip;
-	struct sulfur_mboard_eeprom eeprom;
+	struct n3xx_mboard_eeprom eeprom;
+	char base_fdt[128];
 	int err, i;
 	u32 crc;
 
@@ -122,17 +148,25 @@ int sulfur_probe_mboard(void)
 		return -EINVAL;
 	}
 
+	err = n3xx_match(htons(eeprom.pid));
+	if (err)
+		return err;
+
+	/* store mboard in environment, not n3xx_get_mboard_dtb defaults to 'sulfur' */
+	snprintf(base_fdt, 128, "%s-rev%u", n3xx_get_mboard_dtb(htons(eeprom.pid)), htons(eeprom.rev)+1);
+	env_set("mboard", base_fdt);
+
 	printf("NI Ettus Research Project %s SDR Rev %c s/n %s \n",
-			sulfur_get_mboard_name(htons(eeprom.pid)),
+			n3xx_get_mboard_name(htons(eeprom.pid)),
 			'A' + htons(eeprom.rev),
 			eeprom.serial);
 	return htons(eeprom.rev);
 }
 
-int sulfur_read_ethaddr(unsigned char *ethaddr, int which)
+int n3xx_read_ethaddr(unsigned char *ethaddr, int which)
 {
 	struct udevice *i2c_tun, *eeprom_chip;
-	struct sulfur_mboard_eeprom eeprom;
+	struct n3xx_mboard_eeprom eeprom;
 	int err, i;
 	u32 crc;
 
diff --git a/board/ni/zynq/sulfur-eeprom.h b/board/ni/zynq/n3xx-eeprom.h
similarity index 73%
rename from board/ni/zynq/sulfur-eeprom.h
rename to board/ni/zynq/n3xx-eeprom.h
index a9d491acd7..d1259af079 100644
--- a/board/ni/zynq/sulfur-eeprom.h
+++ b/board/ni/zynq/n3xx-eeprom.h
@@ -1,18 +1,18 @@
 /*
- * NI Ettus Research Sulfur EEPROM helpers
+ * NI Ettus Research N3xx EEPROM helpers
  *
  * Copyright (c) 2017 National Instruments Corp
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
 
-#ifndef NI_ZYNQ_SULFUR_EEPROM_H
-#define NI_ZYNQ_SULFUR_EEPROM_H
+#ifndef NI_ZYNQ_N3XX_EEPROM_H
+#define NI_ZYNQ_N3XX_EEPROM_H
 
 #define ETH_ALEN 6
 
 /**
- * sulfur_mboard_eeprom - The memory map of the USRP Sulfur SDR EEPROM
+ * n3xx_mboard_eeprom - The memory map of the USRP Sulfur SDR EEPROM
  *
  * @magic: Magic constant to indicate that one is looking at a MB eeprom
  * @version: Data layout version
@@ -28,7 +28,7 @@
  * @__pad2: Padding
  * @crc: Contains checksum over the entire struct minus the crc member
  */
-struct sulfur_mboard_eeprom {
+struct n3xx_mboard_eeprom {
 	u32 magic;
 	u32 version;
 	u32 mcu_flags[4];
@@ -45,7 +45,7 @@ struct sulfur_mboard_eeprom {
 } __attribute__((packed));
 
 /**
- * sulfur_dboard_eeprom - The memory map of the USRP Sulfur SDR EEPROM
+ * n3xx_dboard_eeprom - The memory map of the USRP Sulfur SDR EEPROM
  *
  * @magic: Magic constant to indicate that one is looking at a DB eeprom
  * @version: Data layout version
@@ -54,7 +54,7 @@ struct sulfur_mboard_eeprom {
  * @serial: (Non zero terminated) String containing the serial number
  * @crc: Contains checksum over the entire struct minus the crc member
  */
-struct sulfur_dboard_eeprom {
+struct n3xx_dboard_eeprom {
 	u32 magic;
 	u32 version;
 	u16 pid;
@@ -63,8 +63,8 @@ struct sulfur_dboard_eeprom {
 	u32 crc;
 } __attribute__((packed));
 
-int sulfur_probe_mboard(void);
-int sulfur_probe_dboard(int dboard, int *rev);
-int sulfur_read_ethaddr(unsigned char *ethaddr, int which);
+int n3xx_probe_mboard(void);
+int n3xx_probe_dboard(int dboard, int *rev);
+int n3xx_read_ethaddr(unsigned char *ethaddr, int which);
 
-#endif /* NI_ZYNQ_SULFUR_EEPROM_H */
+#endif /* NI_ZYNQ_N3XX_EEPROM_H */
-- 
2.18.0

