From 629405e69770d0d0945cbf98ea4edf0456afbf79 Mon Sep 17 00:00:00 2001
From: Moritz Fischer <moritz.fischer@ettus.com>
Date: Thu, 30 Mar 2017 17:51:49 -0700
Subject: [PATCH 14/24] net: nixge: Add a bunch of fixes & status quo

Signed-off-by: Moritz Fischer <moritz.fischer@ettus.com>
---
 drivers/net/ethernet/ni/nixge_net_dma.c  | 40 +++++++++++++++++++++++++-------
 drivers/net/ethernet/ni/nixge_net_main.c |  8 ++++---
 2 files changed, 37 insertions(+), 11 deletions(-)

diff --git a/drivers/net/ethernet/ni/nixge_net_dma.c b/drivers/net/ethernet/ni/nixge_net_dma.c
index b0aace7..2fcaed1 100644
--- a/drivers/net/ethernet/ni/nixge_net_dma.c
+++ b/drivers/net/ethernet/ni/nixge_net_dma.c
@@ -820,11 +820,13 @@ static int nixge_open(struct net_device *ndev)
 
 	nixge_device_reset(ndev);
 
+	/*
 	if (!ndev->phydev) {
 		netdev_err(ndev, "no phy, phy_start() failed\n");
 	} else {
 		phy_start(ndev->phydev);
 	}
+	*/
 
 	/* Enable tasklets for Axi DMA error handling */
 	tasklet_init(&priv->dma_err_tasklet, nixge_dma_err_handler,
@@ -856,8 +858,10 @@ static int nixge_stop(struct net_device *ndev)
 
 	dev_dbg(&ndev->dev, "axienet_close()\n");
 
+	/*
 	if (ndev->phydev)
 		phy_stop(ndev->phydev);
+		*/
 
 	cr = nixge_dma_read_reg(priv, XAXIDMA_RX_CR_OFFSET);
 	nixge_dma_write_reg(priv, XAXIDMA_RX_CR_OFFSET,
@@ -892,19 +896,34 @@ static int nixge_change_mtu(struct net_device *ndev, int new_mtu)
 	return 0;
 }
 
-static s32 nixge_net_set_mac_address(struct net_device *ndev, void *p)
+static s32 __nixge_set_mac_address(struct net_device *ndev, const void *addr)
 {
 	struct nixge_priv *priv = netdev_priv(ndev);
-	struct sockaddr *addr = p;
-	if (netif_running(ndev))
-		return -EBUSY;
 
-	memcpy(ndev->dev_addr, addr->sa_data, ndev->addr_len);
-	memcpy_toio(priv->ctrl_regs + 0x1000, addr->sa_data, ndev->addr_len);
+	if (addr)
+		memcpy(ndev->dev_addr, addr, ETH_ALEN);
+	if (!is_valid_ether_addr(ndev->dev_addr))
+		eth_random_addr(ndev->dev_addr);
+
+	nixge_ctrl_write_reg(priv, NIXGE_REG_MAC_LSB,
+			     (ndev->dev_addr[2])<< 24 |
+			     (ndev->dev_addr[3] << 16) |
+			     (ndev->dev_addr[4] << 8) |
+			     (ndev->dev_addr[5] << 0));
+
+	nixge_ctrl_write_reg(priv, NIXGE_REG_MAC_MSB,
+			     (ndev->dev_addr[1] | (ndev->dev_addr[0] << 8)));
 
 	return 0;
 }
 
+static int nixge_net_set_mac_address(struct net_device *ndev, void *p)
+{
+	struct sockaddr *addr = p;
+	__nixge_set_mac_address(ndev, addr->sa_data);
+	return 0;
+}
+
 static const struct net_device_ops nixge_netdev_ops = {
 	.ndo_open = nixge_open,
 	.ndo_stop = nixge_stop,
@@ -1031,7 +1050,7 @@ int nixge_mdio_read(struct mii_bus *bus, int phy_id, int reg)
 
 	status = nixge_ctrl_read_reg(priv, NIXGE_REG_MDIO_DATA);
 
-	dev_dbg(priv->dev, "%s: phy_id = %x reg = %x got %x\n", __func__,
+	dev_info(priv->dev, "%s: phy_id = %x reg = %x got %x\n", __func__,
 		 phy_id, reg & 0xffff, status);
 
 	return status;
@@ -1126,6 +1145,7 @@ static int nixge_probe(struct platform_device *pdev)
 		return PTR_ERR(priv->dma_regs);
 	}
 	priv->ctrl_regs = priv->dma_regs + 0x4000;
+	__nixge_set_mac_address(ndev, mac_addr);
 
 	priv->tx_irq = platform_get_irq_byname(pdev, "tx-irq");
 	if (priv->tx_irq < 0) {
@@ -1162,14 +1182,18 @@ static int nixge_probe(struct platform_device *pdev)
 		goto free_netdev;
 	}
 
+	/*
 	err = phy_connect_direct(ndev, priv->phy_dev, &nixge_handle_link_change,
 				 priv->phy_interface);
+
+	err = phy_attach_direct(ndev, priv->phy_dev, 0, priv->phy_interface);
 	if (err) {
 		dev_err(&pdev->dev, "failed to attach to phy ...");
 		goto unregister_mdio;
 	}
 
 	phy_attached_info(ndev->phydev);
+	*/
 
 	netdev_info(ndev, "NIXGE_MAC rev 0x%08x at %p and %p,tx_irq %d rx_irq %d(%pM)\n",
 		    0x200000, priv->dma_regs, priv->ctrl_regs, priv->tx_irq,
@@ -1178,7 +1202,7 @@ static int nixge_probe(struct platform_device *pdev)
 	return 0;
 
 unregister_mdio:
-	phy_disconnect(ndev->phydev);
+	//phy_disconnect(ndev->phydev);
 	mdiobus_unregister(priv->mii_bus);
 	mdiobus_free(priv->mii_bus);
 
diff --git a/drivers/net/ethernet/ni/nixge_net_main.c b/drivers/net/ethernet/ni/nixge_net_main.c
index 3f6d6c7..7230f14 100644
--- a/drivers/net/ethernet/ni/nixge_net_main.c
+++ b/drivers/net/ethernet/ni/nixge_net_main.c
@@ -595,9 +595,9 @@ static int nixge_probe(struct platform_device *pdev)
 	return 0;
 
 err_out_unregister_bus:
-	phy_disconnect(ndev->phydev);
-	mdiobus_unregister(priv->mii_bus);
-	mdiobus_free(priv->mii_bus);
+	//phy_disconnect(ndev->phydev);
+	//mdiobus_unregister(priv->mii_bus);
+	//mdiobus_free(priv->mii_bus);
 
 err_out_free_netdev:
 	free_netdev(ndev);
@@ -610,12 +610,14 @@ static int nixge_remove(struct platform_device *pdev)
 	struct net_device *ndev = platform_get_drvdata(pdev);
 	struct nixge_priv *priv = netdev_priv(ndev);
 
+	/*
 	if (ndev->phydev)
 		phy_disconnect(ndev->phydev);
 	ndev->phydev = NULL;
 
 	mdiobus_unregister(priv->mii_bus);
 	mdiobus_free(priv->mii_bus);
+	*/
 
 	unregister_netdev(ndev);
 	free_netdev(ndev);
-- 
2.7.4

